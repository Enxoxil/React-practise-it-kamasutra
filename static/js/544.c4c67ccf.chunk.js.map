{"version":3,"file":"static/js/544.c4c67ccf.chunk.js","mappings":"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","sources":["components/Profile/ProfileStatusWithHooks.jsx","webpack://init-react-project/./src/components/Profile/Profile.module.scss?4008","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n    return (\r\n        <div>\r\n            {!editMode ? (\r\n                <div>\r\n                    <span onDoubleClick={activateMode}>\r\n                        {props.status || \"No status\"}\r\n                    </span>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        onBlur={deactivateMode}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mainPhoto\":\"Profile_mainPhoto__YYTpi\"};","import React from \"react\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks.jsx\";\r\nimport Preloader from \"../common/preloader/Preloader.jsx\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport {\r\n    required,\r\n    maxLengthCreator,\r\n} from \"../../utils/validators/validator.js\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls.jsx\";\r\nimport userPhoto from \"../../assets/img/user.png\";\r\nimport style from \"./Profile.module.scss\";\r\nlet maxLength100 = maxLengthCreator(100);\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />;\r\n    }\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n    let postsElements = props.posts.map((p) => (\r\n        <Post message={p.message} likesCount={p.likesCount} />\r\n    ));\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div>\r\n                <img\r\n                    src={props.profile.photos.large || userPhoto}\r\n                    className={style.mainPhoto}\r\n                />\r\n                {props.isOwner && (\r\n                    <input type={\"file\"} onChange={onMainPhotoSelected} />\r\n                )}\r\n                <p>\r\n                    Мой ID:{\" \"}\r\n                    {props.match.params.userId || props.authorizedUserId}\r\n                </p>\r\n                <div>\r\n                    <b>ФИО </b>: {props.profile.fullName}\r\n                </div>\r\n                <div>\r\n                    <b>Ищу работу?</b> :{\" \"}\r\n                    {props.profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n                </div>\r\n                {props.profile.lookingForAJob && (\r\n                    <div>\r\n                        <b>Мои скилы</b> :{\" \"}\r\n                        {props.profile.lookingForAJobDescription}\r\n                    </div>\r\n                )}\r\n                <div>\r\n                    <b>О себе</b> : {props.profile.aboutMe}\r\n                </div>\r\n\r\n                <div>\r\n                    <b>Контакты </b>:{\" \"}\r\n                    {Object.keys(props.profile.contacts).map((key) => {\r\n                        return (\r\n                            <Contacts\r\n                                key={key}\r\n                                contactTitle={key}\r\n                                contactValue={props.profile.contacts[key]}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            <ProfileStatusWithHooks\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n\r\n            <h4>My posts</h4>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div>{postsElements}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n    return (\r\n        <div>\r\n            <b>{contactTitle}</b> : {contactValue} .\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field\r\n                        component={Textarea}\r\n                        name={\"newPostText\"}\r\n                        validate={[required, maxLength100]}\r\n                        placeholder=\"Post message\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <>\r\n            <div>Text: {props.message}</div>\r\n            <div>Likes: {props.likesCount}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n    AddNewPostForm\r\n);\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile.jsx\";\r\nimport {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    addPost,\r\n    savePhoto,\r\n} from \"../../redux/profile-reducer.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            // Следующий код ай ай ай это редирект через js\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId ){\r\n            this.refreshProfile();\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Profile\r\n                    {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                    addPost={this.props.addPost}\r\n                    posts={this.props.posts}\r\n                    savePhoto={this.props.savePhoto}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    posts: state.profilePage.posts,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        addPost,\r\n        savePhoto,\r\n    }),\r\n    withRouter\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","onBlur","updateStatus","onDoubleClick","maxLength100","maxLengthCreator","Contacts","contactTitle","contactValue","Post","message","likesCount","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","profile","Preloader","postsElements","posts","map","p","src","photos","large","userPhoto","className","style","isOwner","type","target","files","length","savePhoto","match","params","userId","authorizedUserId","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","key","values","addPost","newPostText","ProfileContainer","this","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","React","compose","connect","state","profilePage","auth","isAuth","withRouter"],"sourceRoot":""}